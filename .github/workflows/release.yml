name: Release Docker Image

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${{ github.ref_name }}"
          fi
          # Remove 'v' prefix if present
          VERSION=${VERSION#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
          echo "Released version: $VERSION"

      - name: Call Docker Build Workflow
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'docker-build.yml',
              ref: context.ref,
              inputs: {
                image_tag: '${{ steps.version.outputs.tag }}',
                is_release: 'true'
              }
            });
            console.log('Docker build workflow triggered for release');

      - name: Wait for Docker build to complete
        uses: actions/github-script@v7
        with:
          script: |
            const { data: runs } = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'docker-build.yml',
              status: 'in_progress',
              per_page: 1
            });

            if (runs.length > 0) {
              console.log('Waiting for Docker build workflow to complete...');
              // Wait for workflow to complete (simplified - in practice you might want more sophisticated waiting)
              await new Promise(resolve => setTimeout(resolve, 30000)); // Wait 30 seconds
            }

      - name: Create GitHub Release
        if: github.event_name == 'push'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: Release ${{ steps.version.outputs.tag }}
          body: |
            ## Docker Image

            The Docker image has been built and pushed to GitHub Container Registry:

            ```bash
            docker pull ghcr.io/${{ github.repository }}:${{ steps.version.outputs.tag }}
            ```

            ### Available Tags
            - `${{ steps.version.outputs.tag }}` - Specific version
            - `${{ steps.version.outputs.version }}` - Version without 'v' prefix
            - `latest` - Latest release (if this is the default branch)

            ### Multi-Architecture Support
            This image supports both `linux/amd64` and `linux/arm64` architectures.
          draft: false
          prerelease: ${{ contains(steps.version.outputs.tag, 'alpha') || contains(steps.version.outputs.tag, 'beta') || contains(steps.version.outputs.tag, 'rc') }}

      - name: Output release details
        run: |
          echo "Release details:"
          echo "Version: ${{ steps.version.outputs.version }}"
          echo "Tag: ${{ steps.version.outputs.tag }}"
          echo "Docker image: ghcr.io/${{ github.repository }}:${{ steps.version.outputs.tag }}"
