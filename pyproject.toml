[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fwtv"
dynamic = ["version"]
authors = [
    { name = "Leon Budnick", email = "y6q6ea9w@mail-proxy.org" },
]
description = "Verification that attendances comply with german rules. Also provide an integration to the api of FactorialHR"
readme = "README.md"
requires-python = "==3.13.*"
packages = ["factorialhr_analysis"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Office/Business",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]
keywords = [
    "FactorialHR",
    "HR",
    "Working time"
]
dependencies = [
    "anyio>=4.9.0",
    "dotenv>=0.9.9",
    "factorialhr>=4.1.0",
    "httpx>=0.28.1",
    "redis>=6.4.0",
    "reflex==0.8.9",
]

[dependency-groups]
test = [
    "pytest>=8.4.1",
    "pytest-html>=4",
    "pytest-cov>=5.0.0",
]
dev = [
    "pyright>=1.1.405",
    "ruff>=0.12.9",
    { include-group = "test" },
]

[project.urls]
"Homepage" = "https://github.com/leon1995/fwtv"
"Bug Tracker" = "https://github.com/leon1995/fwtv/issues"
"Changelog" = "https://github.com/leon1995/fwtv/blob/main/CHANGELOG.md"
"Repository" = "https://github.com/leon1995/fwtv.git"

[tool.hatch.version]
path = "factorialhr_analysis/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["factorialhr_analysis"]

[tool.ruff]
lint.select = ["ALL"]  # https://docs.astral.sh/ruff/settings/#select
lint.extend-ignore = [# https://docs.astral.sh/ruff/settings/#extend-ignore
    "COM812", # https://docs.astral.sh/ruff/rules/missing-trailing-comma/
    "D107", # https://docs.astral.sh/ruff/rules/undocumented-public-init/
    "D203", # https://docs.astral.sh/ruff/rules/incorrect-blank-line-before-class/
    "D213", # https://docs.astral.sh/ruff/rules/multi-line-summary-second-line/
    "S101", # https://docs.astral.sh/ruff/rules/assert/
    "S311", # https://docs.astral.sh/ruff/rules/suspicious-non-cryptographic-random-usage/
]

line-length = 120  # https://docs.astral.sh/ruff/settings/#line-length
# Allow imports relative to the "src" and "test" directories.
src = ["factorialhr_analysis", "tests"]  # https://docs.astral.sh/ruff/settings/#src

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true # https://docs.astral.sh/ruff/settings/#allow-star-arg-any
suppress-none-returning = true # https://docs.astral.sh/ruff/settings/#suppress-none-returning

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true  # https://docs.astral.sh/ruff/settings/#allow-dict-calls-with-keyword-arguments

[tool.ruff.lint.pycodestyle]
max-doc-length = 120 # https://docs.astral.sh/ruff/settings/#max-doc-length
max-line-length = 120  # https://docs.astral.sh/ruff/settings/#lint_pycodestyle_max-doc-length

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104"]

[tool.tox]  # https://github.com/tox-dev/tox-uv
env_list = ["pre-commit", "py313"]

[tool.tox.env_run_base]
runner = "uv-venv-lock-runner"
depends = ["pre-commit"]
package = "editable"
commands = [["pytest"]]
dependency_groups = ["test"]

[tool.tox.env.pre-commit]
commands = [["pre-commit", "run", "--all-files"]]
depends = []
allowlist_externals = ["pre-commit"]
package = "skip"

[tool.pytest.ini_options]
testpaths = "tests/"
addopts = [
    "--cov=factorialhr_analysis",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=xml",
]
